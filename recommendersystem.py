# -*- coding: utf-8 -*-
"""RecommenderSystem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tTbe1NFQEr8ZrVkO0vT2IgvRa0xxd3PQ
"""


import pandas as pd
import numpy as np
import tensorflow as tf
from warnings import simplefilter
simplefilter(action="ignore", category=pd.errors.PerformanceWarning)
#read csv
jobs = pd.read_csv('testcsv.csv',encoding='utf-8')
#Separamos en una lista de valores los skills
jobs['skills'] = jobs['skills'].str.split(',')
jobs['job'] = jobs['job'].str.split(',')

# convert list of lists to list
skills = []
jobtitles = []

for i in jobs['skills']:
    for j in i:
      skills.append(j)
      
for i in jobs['job']:
    for j in i:
      jobtitles.append(j)
      
      
# to lowercase
skills = [x.lower() for x in skills]
# remove start and end spaces
skills = [x.strip() for x in skills]      
# remove duplicates
skills = list(dict.fromkeys(skills))

#one hot encoding
jobs_skills_array = []
#matrix of zeros and ones if job has skill
for i in skills:
    job_skills = []
    for j in skills:
        if j in i:
            job_skills.append(1)
        else:
            job_skills.append(0)
    jobs_skills_array.append(job_skills)
  
jobs_skills = tf.constant(jobs_skills_array, dtype=tf.float32)

users = ['Martin', 'Sebastian']
#fill zeros with len of jobs_skills array

users_skills_array = np.zeros((len(users), len(skills)))
users_skills_array[0][1] = 1
users_skills_array[0][2] = 1
users_skills_array[0][4] = 1
users_skills_array[0][8] = 1
users_skills_array[1][9] = 1
users_skills_array[1][0] = 1
users_skills_array[1][48] = 1
users_skills_array[1][39] = 1
 
user_skills = tf.constant(users_skills_array, dtype=tf.float32)  

num_users = len(users)
#num_jobs = len(jobs)
num_skills = len(skills)
num_recommendations = 3



user_feats = tf.matmul(user_skills, jobs_skills)
user_feats

user_feats = user_feats/tf.reduce_sum(user_feats,axis=1, keepdims=True)
user_feats

top_users_skills = tf.nn.top_k(user_feats , num_skills)[1]
top_users_skills

for i in range(num_users):
  skills_names = [skills[int(index)] for index in top_users_skills[i]]
 # print('{}: {}'.format(users[i], skills_names))

user_skills_ratings = tf.matmul(user_feats, tf.transpose(jobs_skills))
user_skills_ratings

user_skills_ratings_new = tf.where(tf.equal(user_skills, tf.zeros_like(user_skills)), user_skills_ratings,
                                   tf.zeros_like(tf.cast(user_skills,tf.float32)))
user_skills_ratings_new

top_jobs = tf.nn.top_k(user_skills_ratings_new, 5)[1]

print(len(top_jobs))

for i in range(num_users):
  jobs_names = [skills[index] for index in top_jobs[i]]
  print('{} Te recomiendo que estudies para ser: {}'.format(users[i], jobs_names))